name: Developer Platform P2P


on:
  workflow_call:
    secrets:
      env_vars:
        required: false
    inputs:
      dry-run:
        required: false
        type: boolean
        default: false
      pre-targets:
        description: |
          Make targets to run before each p2p command
        required: false
        type: string
        default: ''
      post-targets:
        description: |
          Make targets to run after each p2p command
        required: false
        type: string
        default: ''

env:
  REGION: europe-west2

jobs:
#  setup:
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#      matrix: ${{ fromJson(vars.STAGE_DEV) }}
#    environment: "${{ matrix.deploy_env }}"
#    env:
#      REGISTRY: ${{ vars.REGION }}-docker.pkg.dev/${{ vars.PROJECT_ID }}/tenant
#      SERVICE_ACCOUNT: p2p-${{ vars.TENANT_NAME }}@${{ vars.PROJECT_ID }}.iam.gserviceaccount.com
#      WORKLOAD_IDENTITY_PROVIDER: projects/${{ vars.PROJECT_NUMBER }}/locations/global/workloadIdentityPools/p2p-${{ vars.TENANT_NAME }}/providers/p2p-${{ vars.TENANT_NAME }}
#      BASE_URL: ${{ vars.BASE_URL }}
#      ENVIRONMENT: ${{ vars.ENV }}
#      ENV: ${{ vars.ENV }}
#      PROJECT_NUMBER: ${{ vars.PROJECT_NUMBER }}
#      PROJECT_ID: ${{ vars.PROJECT_ID }}
#      TENANT_NAME: ${{ vars.TENANT_NAME }}
#    outputs:
#      workflow_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
#      service_account: ${{ env.SERVICE_ACCOUNT }}
#      deploy-env: ${{ inputs.deploy-env }}
#      region: ${{ vars.REGION }}
#      project-id: ${{ vars.PROJECT_ID }}
#      base-url: ${{ vars.BASE_URL }}
#      env_vars: ${{ toJSON(env) }}
#      env-name: ${{ vars.ENV }}
#      matrix: ${{ toJSON(matrix) }}
#    steps:
#      - name: Setup inputs passed to the reusable workflow
#        id: setup
#        run: |
#          echo "workflow_identity_provider=$WORKLOAD_IDENTITY_PROVIDER"
#          echo "service_account=$SERVICE_ACCOUNT"

#  print:
#    runs-on: ubuntu-latest
#    needs: setup
#    steps:
#      - name: print
#        id: print
#        run: |
#          echo "deploy_env=${{ needs.setup.outputs.deploy-env }}"
#          echo "project_id=${{ needs.setup.outputs.project-id }}"
#          echo "project_number=${{ needs.setup.outputs.project-number }}"
#          echo "base_url=${{ needs.setup.outputs.base-url }}"
#          echo "workflow_identity_provider=${{ needs.setup.outputs.workflow_identity_provider }}"
#          echo "env=${{ needs.setup.outputs.env-name }}"
#          echo "service_account=${{ needs.setup.outputs.service_account }}"
#          echo "registry=${{ needs.setup.outputs.registry }}"
#          echo "env_vars=${{ needs.setup.outputs.env_vars }}"
#          echo "matrix=${{ needs.setup.outputs.matrix }}"
#          echo "matrix=${{ needs.setup.outputs.envvars_cecg-sandbox }}"
  

  build:
    uses: ./.github/workflows/envmatrix-execute-command.yaml
    with:
      command: build
      envmatrix: ${{ vars.STAGE_DEV }}

  functional-test:
    needs: [build]
    uses: ./.github/workflows/envmatrix-execute-command.yaml
    with:
      command: func
      envmatrix: ${{ vars.STAGE_DEV }}


  prod-deploy:
    needs: [build]
    uses: ./.github/workflows/envmatrix-execute-command.yaml
    with:
      command: prod
      envmatrix: ${{ vars.STAGE_PROD }}
#
#
#  nft-test:
#    name: nft-test
#    needs: [functional-test, setup]
#    uses: ./.github/workflows/execute-command.yaml
#    with:
#      command: p2p-nft
#      foo: ${{ needs.setup.outputs.env_vars }}
#
#  dev-deploy:
#    name: dev-deploy
#    #if: github.ref == 'refs/heads/main'
#    needs: [nft-test, setup]
#    uses: ./.github/workflows/execute-command.yaml
#    with:
#      command: p2p-dev
#      foo: ${{ needs.setup.outputs.env_vars }}

